// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Accounts {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  email        String         @unique @db.VarChar(100)
  password     String
  number_phone String         @db.VarChar(13)
  role         Role           @default(user)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now())
  donations    Donation[]
  
}

enum Role {
  user
  admin
}

model Campaign {
  id               Int            @id @default(autoincrement())
  title            String
  description      String?
  target_amount    Int
  collected_amount Int            @default(0)
  image            String? // Tambahan kolom untuk menyimpan path atau URL gambar
  createdAt        DateTime       @default(now())
  donations        Donation[]
}


model Galeri {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  image       String?
  startDate   DateTime // ‚Üê Input manual oleh user/admin
}

model Donation {
  id         Int      @id @default(autoincrement())
  amount     Int
  createdAt  DateTime @default(now())
  status     Status   @default(pending) // pending, done, expired
  orderId    String?
  userId     Int
  campaignId Int
  user       Accounts @relation(fields: [userId], references: [id])
  campaign   Campaign @relation(fields: [campaignId], references: [id])
}

enum Status {
  pending
  berhasil
  gagal
}
